//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//       如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>
//
// <copyright file="SaleOrderRepository.cs">
//        Copyright(c)2013 GMFCN.All rights reserved.
//        CLR版本：4.0.30319.239
//        开发组织：yxd
//        生成时间：2020-02-21 16:20
// </copyright>
//------------------------------------------------------------------------------
using EntitiesModels;
using EntitiesModels.Models;
using FXKJ.Infrastructure.DataAccess;
using WebApi.IRepository;
using FXKJ.Infrastructure.Dapper;
using System.Configuration;
using System.Threading.Tasks;
using EntitiesModels.DtoModels;
using EntitiesModels.QueryModels;
using System.Collections.Generic;
using System.Data;
using FXKJ.Infrastructure.Auth;
using FXKJ.Infrastructure.Auth.Auth;
using System.Linq;

namespace WebApi.Repository
{
    /// <summary>
    ///   数据访问层——SaleOrder
    /// </summary>
    public partial class SaleOrderRepository : ISaleOrderRepository
    {
       
        /// <summary>
        /// 
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>

        public IEnumerable<SaleOrderViewModel> GetSaleOrderViewModelPageList(QueryModel model)
        {
            //var sql = @" select * from ( SELECT  a.*  FROM [dbo].[SaleOrder] AS a WITH(NOLOCK) "+permissionWhere+" ) as cc @where @orderBy @page";
            //var list =  SqlMapperUtil.PagingQuery<SaleOrderViewModel>(sql, model);
            //return list;

            List<SaleOrderViewModel> list = new List<SaleOrderViewModel>();
            var fSql = string.Format(@" select * from  (SELECT a.*,b.ProductName,b.SimpleCode,c.ExpressCompanyName FROM  SaleOrderInfo AS a (NOLOCK) 
LEFT JOIN dbo.Product AS b (NOLOCK) ON a.SProductCode=b.ProductCode
LEFT JOIN dbo.ExpressCompany AS c(NOLOCK) ON a.ExpressCompanyCode=c.ExpressCompanyCode {0} ) as F  @whereF ", permissionWhere);
            var mSql = string.Format(@" select M.* from (SELECT a.*  FROM  dbo.SaleOrder AS a (NOLOCK)  
{0} AND  @whereMF 
) AS M  @whereM @orderBy @page ", permissionWhere);
            var querySql = string.Format(@"SELECT t1.*,t2.* FROM ({0}) as t1 left JOIN ({1}) as t2 ON t1.SOrderNum=t2.SOrderNum ", mSql, fSql);
            SqlMapperUtil.PagingQueryMult<SaleOrderViewModel>(fSql, mSql, querySql, "SOrderNum", model,
                new[] { typeof(SaleOrderViewModel), typeof(SaleOrderInfoViewModel) },
                (objs) =>
                {
                    SaleOrderViewModel saleOrder = objs[0] as SaleOrderViewModel;
                    SaleOrderInfoViewModel saleOrderInfo = objs[1] as SaleOrderInfoViewModel;
                    SaleOrderViewModel ent = list.FirstOrDefault(p => p.SOrderNum == saleOrder.SOrderNum);
                    if (ent == null)
                    {
                        saleOrder.SaleOrderInfoViewModels = new List<SaleOrderInfoViewModel>();
                        ent = saleOrder;
                        list.Add(ent);
                    }
                    ent.SaleOrderInfoViewModels.Add(saleOrderInfo);
                    return ent;
                }, splitOn: "ID");
            return list;

        }

        public DataTable GetSaleOrderViewModelDataTable(QueryModel model)
        {
            var sql = @" 
select * from (SELECT distinct 
a.SOrderNum ,
e.NickName,
a.PhoneNumber,
a.SOrderCreateTime,
a.AllSaleAmount,
a.AllSaleFreightAmount,
a.AllSaleSettlementAmount,
a.AllSaleSumAmount,
(case when a.SaleOrderState='FF01' then '未完成' else '已锁定' end) as SaleOrderState
FROM [dbo].[SaleOrder] AS a WITH(NOLOCK) 
left join [dbo].[SaleOrderInfo] AS d WITH(NOLOCK)  on a.SOrderNum=d.SOrderNum
left join dbo.UserInfo as e with(nolock) on a.PhoneNumber=e.PhoneNumber "+permissionWhere+") as cc @where  ";
            return SqlMapperUtil.GetDataTable(sql, model);
        }
    }
}

