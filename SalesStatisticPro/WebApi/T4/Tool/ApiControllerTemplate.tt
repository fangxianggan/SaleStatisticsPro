<#+
// <copyright file="IEntityBLLTemplate.tt" company="郭明锋@中国">
//  Copyright © yxd All Rights Reserved.
// </copyright>


public class ApiControllerTemplate : CSharpTemplate
{
    private T4ModelInfo _model;
        
    public ApiControllerTemplate(T4ModelInfo model)
    {
        _model = model;
    }

    /// <summary>
    /// 获取 生成的文件名，根据模型名定义
    /// </summary>
    public string FileName
    {
        get
        { 
            return string.Format("_{0}Controller.cs", _model.Name);
        }
    }

    public override string TransformText()
    {
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//       如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>
//
// <copyright file="_<#= _model.Name #>Controller.cs">
//        Copyright(c)2013 GMFCN.All rights reserved.
//        CLR版本：4.0.30319.239
//        开发组织：yxd
//        生成时间：<#= DateTime.Now.ToString("yyyy-MM-dd HH:mm") #>
// </copyright>
//------------------------------------------------------------------------------
using EntitiesModels.Models;
using EntitiesModels.Models.SysModels;
using EntitiesModels.HttpResponse;
using EntitiesModels.QueryModels;
using System.Collections.Generic;
using System.Web.Http;
using WebApi.IBLL;
using System;
namespace WebApi.Controllers

{
   /// <summary>
    /// <#= _model.Name #> 控制器api 代码自动生成
    /// </summary>
    [RoutePrefix("dev-api/<#= _model.Name #>")]
    public partial class <#= _model.Name #>Controller : ApiController
    { 
        private readonly I<#= _model.Name #>BLL _<#= _model._Name #>BLL;
        /// <summary>
        /// 构造器 依赖注入
        /// </summary>
        /// <param name="<#= _model._Name #>BLL"></param>
        public <#= _model.Name #>Controller(I<#= _model.Name #>BLL <#= _model._Name #>BLL)
        {
            _<#= _model._Name #>BLL = <#= _model._Name #>BLL;
        }
        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="query"></param>
        /// <returns></returns>
        /// 
        [Route("_GetPageList")]
        [HttpPost]
        public HttpReponseModel<List<<#= _model.Name #>>> GetPageList([FromBody] QueryModel query)
        {
            return  _<#= _model._Name #>BLL.GetPageList(query);
        }

        /// <summary>
        /// 保存数据 当前数据
        /// </summary>
        /// <param name="<#= _model._Name #>"></param>
        /// <returns></returns>
        [HttpPost]
        [Route("_SaveData")]
        public HttpReponseModel<<#= _model.Name #>> Post(<#= _model.Name #> <#= _model._Name #>)
        {
            return  _<#= _model._Name #>BLL.SaveData(<#= _model._Name #>);
        }


        /// <summary>
        /// 保存数据 多条数据 add edit
        /// </summary>
        /// <param name="<#= _model._Name #>List"></param>
        /// <returns></returns>
        [HttpPost]
        [Route("_SaveListData")]
        public HttpReponseModel<List<<#= _model.Name #>>> PostListData(List<<#= _model.Name #>> <#= _model._Name #>List)
        {
            return  _<#= _model._Name #>BLL.SaveData(<#= _model._Name #>List);
        }
        
        /// <summary>
        /// 删除数据
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        [HttpGet]
        [Route("_DelData")]
        public HttpReponseModel<int> Delete(<#=_model.KeyTypeName#> id)
        {
            return  _<#= _model._Name #>BLL.DelData(id);
        }



    }
}

<#+
        return this.GenerationEnvironment.ToString();
    }
}
#>