<#+
// <copyright file="IEntityRepositoryTemplate.tt" >
//  Copyright yxd. All Rights Reserved.
// </copyright>


public class RepositoryTemplate : CSharpTemplate
{
    private T4ModelInfo _model;
        
    public RepositoryTemplate(T4ModelInfo model)
    {
        _model = model;
    }

    /// <summary>
    /// 获取 生成的文件名，根据模型名定义
    /// </summary>
    public string FileName
    {
        get
        { 
            return string.Format("_{0}Repository.cs", _model.Name);
        }
    }

    public override string TransformText()
    {
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
//       如存在本生成代码外的新需求，请在相同命名空间下创建同名分部类进行实现。
// </auto-generated>
//
// <copyright file="<#= _model.Name #>Repository.cs">
//        Copyright(c)2013 GMFCN.All rights reserved.
//        CLR版本：4.0.30319.239
//        开发组织：yxd
//        生成时间：<#= DateTime.Now.ToString("yyyy-MM-dd HH:mm") #>
// </copyright>
//------------------------------------------------------------------------------
using EntitiesModels;
using EntitiesModels.Models;
using EntitiesModels.Models.SysModels;
using FXKJ.Infrastructure.DataAccess;
using WebApi.IRepository;
using FXKJ.Infrastructure.Dapper;
using System.Configuration;
using FXKJ.Infrastructure.Auth;
using FXKJ.Infrastructure.Auth.Auth;
namespace WebApi.Repository
{
    /// <summary>
    ///   数据访问层——<#= _model.Description #>
    /// </summary>
    public partial class <#= _model.Name #>Repository : I<#=_model.Name#>Repository
    { 
          private readonly string connString = "MyStrConn";
          private readonly AuthInfoViewModel authInfo = FormAuthenticationExtension.CurrentAuth();
          private string permissionWhere
          {
              get
              {
                  if (authInfo.Roles.Contains("admin"))
                  {
                      return string.Format(" where 1=1 ");
                  }
                  else
                  {
                      return string.Format(" where a.P_MerchantNo={0} ", authInfo.MerchantNo);
                  }
              }
          }
            /// <summary>
           ///   数据——
          /// </summary>
         public <#= _model.Name #>Repository()
         {
           SqlMapperUtil.ConnectionName=connString;
         }
         



    }
}

<#+
        return this.GenerationEnvironment.ToString();
    }
}
#>